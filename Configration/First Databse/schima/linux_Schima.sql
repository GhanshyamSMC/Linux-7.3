
CREATE TABLE algo.executions(OBJECT_ID VARCHAR(40) NOT NULL PRIMARY KEY, SYMBOL VARCHAR(30), SIDE VARCHAR(20), QUANTITY DOUBLE, PRICE DOUBLE,
	ORDER_ID VARCHAR(40), PARENT_ID VARCHAR(40), STRATEGY_ID VARCHAR(40), EXEC_ID VARCHAR(40), MODIFIED TIMESTAMP, CREATED TIMESTAMP, SEQ_ID VARCHAR(40), SERVER_ID VARCHAR(40));


CREATE TABLE algo.active_child_orders(OBJECT_ID VARCHAR(40) NOT NULL PRIMARY KEY, SYMBOL VARCHAR(30), SIDE VARCHAR(20), QUANTITY DOUBLE, PRICE DOUBLE,
	CUM_QTY DOUBLE, AVG_PX DOUBLE, ORDER_TYPE VARCHAR(20), ORD_STATUS VARCHAR(20), PARENT_ID VARCHAR(40), STRATEGY_ID VARCHAR(40), 
	MODIFIED TIMESTAMP, CREATED TIMESTAMP, SEQ_ID VARCHAR(40), CLORDER_ID VARCHAR(40), SERVER_ID VARCHAR(40));


CREATE TABLE algo.child_order_audit(AUDIT_ID VARCHAR(40) NOT NULL PRIMARY KEY,OBJECT_ID VARCHAR(40), EXEC_TYPE VARCHAR(20), SYMBOL VARCHAR(30), SIDE VARCHAR(20), QUANTITY DOUBLE, PRICE DOUBLE,
	CUM_QTY DOUBLE, AVG_PX DOUBLE, ORDER_TYPE VARCHAR(20), ORD_STATUS VARCHAR(20), PARENT_ID VARCHAR(40), STRATEGY_ID VARCHAR(40), 
	MODIFIED TIMESTAMP, CREATED TIMESTAMP, SEQ_ID VARCHAR(40), CLORDER_ID VARCHAR(40), SERVER_ID VARCHAR(40));


CREATE TABLE algo.text_objects(OBJECT_ID VARCHAR(40), OBJECT_TYPE VARCHAR(40), LINE_NO INTEGER, 
	TIME_STAMP TIMESTAMP, XML_TEXT VARCHAR(4096), 
	SERVER_ID VARCHAR(40),
	CONSTRAINT ST_PRIMARY_KEY PRIMARY KEY (OBJECT_ID, OBJECT_TYPE, LINE_NO));
CREATE INDEX ST_INDEX ON algo.text_objects (OBJECT_ID);


CREATE TABLE algo.login(userid varchar(40) NOT NULL, password varchar(30) NOT NULL, admin bit NOT NULL, LastLoginTime datetime NOT NULL, SERVER_ID VARCHAR(40), PRIMARY KEY(userid,SERVER_ID));


CREATE TABLE algo.risk_properties(PROPERTY_NAME VARCHAR(40), PROPERTY_VALUE VARCHAR(40), CURRENT_VALUE BIT, TIME_STAMP TIMESTAMP, SERVER_ID VARCHAR(40), PRIMARY KEY(PROPERTY_NAME,SERVER_ID));


CREATE TABLE algo.contract(TOKEN INTEGER NOT NULL PRIMARY KEY, ASSET_TOKEN INTEGER, INSTRUMENT_NAME VARCHAR(6), ORDERSYMBOL VARCHAR(20), SERIES VARCHAR(2), EXPIRY INTEGER, STRIKE_PRICE VARCHAR(7), OPTION_TYPE VARCHAR(2), RESERVED_IDENTIFIER INTEGER, ADMISSION_TYPE INTEGER, TRADING_STATUS_NORMAL INTEGER, ELIGIBILITY_NORMAL INTEGER, ISSUE_INFO_MATURITY_DATE INTEGER, MINIMUM_LOT_SIZE INTEGER, BOARD_LOT_QUANTITY INTEGER, MINIMUM_SPREAD DOUBLE, VOLUME_FREEZE_QTY DOUBLE, LOW_PRICE_RANGE DOUBLE, HIGH_PRICE_RANGE DOUBLE, STOCK_NAME VARCHAR(40), UNDERLYING_SYMBOL VARCHAR(20), BASE_PRICE DOUBLE, MARKET_WIDE_POSITION_LIMIT DOUBLE, TRADING_MEMBER_POSITION_LIMIT DOUBLE, MAX_BUY_QTY DOUBLE, MAX_SELL_QTY DOUBLE, MARGIN_PERCENT DOUBLE, SYMBOL_BANNED BIT, ENABLED BIT, OPEN DOUBLE, CLOSE DOUBLE, HIGH DOUBLE, LOW DOUBLE);


CREATE TABLE algo.security(TOKEN INTEGER NOT NULL PRIMARY KEY, ORDERSYMBOL VARCHAR(10), SERIES VARCHAR(2), INSTRUMENT_TYPE INTEGER, PERMITTED_TO_TRADE BIT, CREDIT_RATING VARCHAR(20), SECURITY_STATUS INTEGER, BOARD_LOT_QUANTITY INTEGER, TICK_SIZE DOUBLE, NAME VARCHAR(25), FREEZE_PERCENT INTEGER, MM_SPREAD DOUBLE, MM_MIN_QTY DOUBLE, ISIN VARCHAR(12), MARKET_WIDE_POSITION_LIMIT DOUBLE, TRADING_MEMBER_POSITION_LIMIT DOUBLE, MAX_BUY_QTY DOUBLE, MAX_SELL_QTY DOUBLE, MARGIN_PERCENT DOUBLE, SYMBOL_BANNED BIT, ENABLED BIT, OPEN DOUBLE, CLOSE DOUBLE, HIGH DOUBLE, LOW DOUBLE);


CREATE TABLE algo.pnl(STRATEGY_ID VARCHAR(40) NOT NULL, PNL DOUBLE, PNL_DATE datetime NOT NULL, SERVER_ID VARCHAR(40) NOT NULL, CONSTRAINT PNL_PRIMARY_KEY PRIMARY KEY (STRATEGY_ID, PNL_DATE));


CREATE TABLE algo.bhavcopy(INSTRUMENT_NAME VARCHAR(6) NOT NULL, ORDERSYMBOL VARCHAR(20) NOT NULL, EXPIRY TIMESTAMP, STRIKE_PRICE VARCHAR(7), OPTION_TYPE VARCHAR(2), BHAV_DATE TIMESTAMP, OPEN DOUBLE, CLOSE DOUBLE, HIGH DOUBLE, LOW DOUBLE, SETTLE_PRICE DOUBLE, CONTRACTS DOUBLE, VAL DOUBLE, OI DOUBLE, OI_CHANGE DOUBLE, ENABLED BIT, CONSTRAINT ST_PRIMARY_KEY PRIMARY KEY (INSTRUMENT_NAME, ORDERSYMBOL, EXPIRY, STRIKE_PRICE, OPTION_TYPE, BHAV_DATE));


CREATE TABLE algo.watchlist(SYMBOL VARCHAR(40) NOT NULL, CREATION_DATE datetime NOT NULL, USER_ID VARCHAR(40) NOT NULL, SERVER_ID VARCHAR(40) NOT NULL, BFQty DOUBLE, BFAvgPrice DOUBLE, BFPnl DOUBLE, IS_NEUTRAL BIT, CONSTRAINT WATCHLIST_PRIMARY_KEY PRIMARY KEY (USER_ID, SYMBOL, SERVER_ID));


CREATE TABLE algo.execution_summary(ID INT NOT NULL auto_increment PRIMARY KEY,STRATEGY VARCHAR(40) NOT NULL, STRATEGY_ID VARCHAR(40) NOT NULL, SYMBOL VARCHAR(40) NOT NULL, EXPIRY INTEGER,PRICE_REQUESTED DOUBLE, PRICE_GOT DOUBLE, QUANTITY DOUBLE, REQUEST_TIME datetime NOT NULL, COMPLETION_TIME datetime NOT NULL, LEG1_SYMBOL VARCHAR(40) NOT NULL, LEG1_SIDE VARCHAR(40) ,  LEG1_PRICE DOUBLE, LEG1_QUANTITY DOUBLE, LEG2_SYMBOL VARCHAR(40) NOT NULL, LEG2_SIDE VARCHAR(40) ,  LEG2_PRICE DOUBLE, LEG2_QUANTITY DOUBLE, SERVER VARCHAR(40) NOT NULL);

CREATE INDEX algo_watchlist_search_index ON algo.watchlist (USER_ID, SERVER_ID);
CREATE INDEX algo_watchlist_symbol_search_index ON algo.watchlist (SYMBOL, SERVER_ID);
